%!**********************************************************************
%
%     Subroutine DYNSTOR             Called by: DYNCONC
%
%     Stores Concentration Data
%
%***********************************************************************
%
for I = 1:IMAX
    if INEST == 0
        CONC2(I,J) = ( (2-GAMMA1N(I)-DT*(LAMBDA2(I,J)+LAMHAT2(I,J)))*CONC2N(I,J)...
                     + GAMMA1N(I)*CONCN(I,J)...
                     + GAMMA1(I)*CONC(I,J)...
                     + 2*DT*LAMHAT2(I,J)*CSBACK(I,J))...
                     / (2+GAMMA1(I)+DT*(LAMBDA2(I,J)+LAMHAT2(I,J)));
        CONC3(I,J) = ( (2-GAMMA2N(I)-DT*(LAMBDA3(I,J)+LAMHAT3(I,J)))*CONC3N(I,J)...
                     + GAMMA2N(I)*CONCN(I,J)...
                     + GAMMA2(I)*CONC(I,J)...
                     + 2*DT*LAMHAT3(I,J)*CSBACK3(I,J))...
                     / (2+GAMMA2(I)+DT*(LAMBDA3(I,J)+LAMHAT3(I,J)));
    else
        BETA4(I,J) = 2-GAMMA1(I)-DT*(LAMBDA2(I,J)+LAMHAT2(I,J)+ALPHA3(I));
        BETA5(I,J) = 2-GAMMA3(I)-DT*(LAMBDA3(I,J)+LAMHAT3(I,J));
        BETA6(I,J) = DT*ALPHA3(I)/(2+GAMMA3(I)+DT*(LAMHAT3(I,J)+LAMBDA3(I,J)));
        BETA7(I,J) = 2+GAMMA1(I)+DT*(LAMHAT2(I,J)+LAMBDA2(I,J)+ALPHA3(I));
        CONC2(I,J) = (BETA4(I,J)*CONC2N(I,J)+GAMMA1(I)*CONCN(I,J)+GAMMA1(I)*CONC(I,J)+2*DT*LAMHAT2(I,J)*CSBACK(I,J)+...
                     BETA6(I,J)*(BETA5(I,J)*CONC3N(I,J)+GAMMA3(I)*CONC2N(I,J)+2*DT*LAMHAT3(I,J)*CSBACK3(I,J))+...
                     DT*ALPHA3(I)*CONC3N(I,J))/(BETA7(I,J)*(1-BETA6(I,J)*GAMMA3(I)/BETA7(I,J)));
        CONC3(I,J) = ( (2-GAMMA3N(I)-DT*(LAMBDA3(I,J)+LAMHAT3(I,J)))*CONC3N(I,J)...
                     + GAMMA3N(I)*CONC2N(I,J)...
                     + GAMMA3(I)*CONC2(I,J)...
                     + 2*DT*LAMHAT3(I,J)*CSBACK3(I,J))...
                     / (2+GAMMA3(I)+DT*(LAMBDA3(I,J)+LAMHAT3(I,J)));
    end;   
    CSED(I,J) = ((2-DT*LAMHAT(I,J)*CSEDN(I,J)+ KD(I,J)*DT*LAMHAT(I,J)*...
                (CONC(I,J)+CONCN(I,J))) / (2+DT*LAMHAT(I,J)));
end;

