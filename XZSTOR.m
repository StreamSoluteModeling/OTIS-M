%!**********************************************************************
%
%     Subroutine XZSTOR             Called by: SSDIFF
%
%     Computes X and Z Storage Coefficients for zones 1 and 2
%
%***********************************************************************
%
Xstor(I,J) = 0;
Xstor1(I,J) = 0;
Xstor2(I,J) = 0;
%
Zstor(I,J) = 0;
Zstor1(I,J) = 0;
Zstor2(I,J) = 0;
%
if INEST == 0
    if (ALPHA(I) ~= 0) && (AREA2(I) ~= 0)
       Xstor1(I,J) = ...
            + ALPHA(I)*AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)) /...
            (ALPHA(I)*AREA(I)...
            + AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)));
       Zstor1(I,J) = ...
            + ALPHA(I)*AREA2(I)*LAMHAT2(I,J)*CSBACK(I,J)/...
            (ALPHA(I)*AREA(I) +...
            AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)));
    end;
    if (ALPHA3(I) ~= 0) && (AREA3(I) ~= 0)
       Xstor2(I,J) = ...
            + ALPHA3(I)*AREA3(I)*(LAMBDA3(I,J)+LAMHAT3(I,J)) /...
            (ALPHA3(I)*AREA(I)...
            + AREA3(I)*(LAMBDA3(I,J)+LAMHAT3(I,J)));
       Zstor2(I,J) = ...
            + ALPHA3(I)*AREA3(I)*LAMHAT3(I,J)*CSBACK3(I,J)/...
            (ALPHA3(I)*AREA(I) +...
            AREA3(I)*(LAMBDA3(I,J)+LAMHAT3(I,J)));
    end;
    Xstor(I,J) = Xstor1(I,J) + Xstor2(I,J);
    Zstor(I,J) = Zstor1(I,J) + Zstor2(I,J);
else
    if (ALPHA(I) ~= 0) && (ALPHA3(I) ~= 0) && (AREA2(I) ~= 0) && (AREA3(I) ~= 0)
        Xstor(I,J) = ALPHA(I)*AREA2(I)*...
            ((LAMBDA2(I,J)+LAMHAT2(I,J)+ALPHA3(I))*...
            (ALPHA3(I)*AREA2(I)+ALPHA3(I)*(LAMBDA3(I,J)+LAMHAT3(I,J)))-...
            (AREA2(I)*(ALPHA3(I))^2))/...
            ((ALPHA(I)*AREA(I)+AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)+ALPHA3(I)))*...
            (ALPHA3(I)*AREA2(I)+ALPHA3(I)*(LAMBDA3(I,J)+LAMHAT3(I,J)))-...
            (ALPHA3(I)*AREA2(I))^2);
        Zstor(I,J) = ALPHA(I)*AREA2(I)*...
            ((LAMBDA2(I,J)*CSBACK(I,J))*...
            (ALPHA3(I)*AREA2(I)+ALPHA3(I)*(LAMBDA3(I,J)+LAMHAT3(I,J)))+...
            (ALPHA3(I)*AREA3(I)*LAMHAT3(I,J)*CSBACK3(I,J)))/...
            ((ALPHA(I)*AREA(I)+AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)+ALPHA3(I)))*...
            (ALPHA3(I)*AREA2(I)+ALPHA3(I)*(LAMBDA3(I,J)+LAMHAT3(I,J)))-...
            (ALPHA3(I)*AREA2(I))^2);
    elseif (ALPHA(I) ~= 0) && (AREA2(I) ~= 0)
        Xstor(I,J) = ...
            + ALPHA(I)*AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)) /...
            (ALPHA(I)*AREA(I)...
            + AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)));
        Zstor(I,J) = ...
            + ALPHA(I)*AREA2(I)*LAMHAT2(I,J)*CSBACK(I,J)/...
            (ALPHA(I)*AREA(I) +...
            AREA2(I)*(LAMBDA2(I,J)+LAMHAT2(I,J)));       
    end
end;